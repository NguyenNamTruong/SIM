@model User
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <link rel="stylesheet" href="/css/Login.css">
</head>
<body>
    <div class="wrapper active-popup">
        <div class="form-box login">
            <h2>Welcome</h2>
            @using (Html.BeginForm("Login", "Authentication", FormMethod.Post, new { @class = "form", id = "formlogin" }))
            {
                <div class="input-box">
                    <span class="icon"><ion-icon name="mail-unread-outline"></ion-icon></span>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-controll", required = "required" ,autocomplete="off"})
                    @Html.LabelFor(m => m.Email)
                </div>
                <div class="input-box">
                    <span class="icon"><ion-icon name="lock-closed-outline"></ion-icon></span>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-controll", required = "required" })
                    @Html.LabelFor(m => m.Password)
                </div>
                <div class="remember-forgot">
                    <label for=""><input type="checkbox">Remember me</label>
                    <a href="#">Forgot Password?</a>
                </div>
                <div style="color:red">
                    @ViewBag.error
                </div>
                <input type="submit" value="Login" class="btn" />
                <div class="login-register">
                    <p>Don't have an account?<a href="#" class="register-link">Register</a></p>
                </div>
            }
        </div>
        @using (Html.BeginForm("Register", "Authentication", FormMethod.Post, new { @class = "form-box register", id = "formregister" }))
        {
            <h2>Register</h2>
            <div class="input-box">
                <span class="icon"><ion-icon name="person-circle-outline"></ion-icon></span>
                @Html.TextBoxFor(m => m.Name, new { @class = "form-controll", type = "text", required = "required" ,autocomplete="off"})
                <label>User Name</label>
            </div>
            <div class="input-box">
                <span class="icon"><ion-icon name="mail-unread-outline"></ion-icon></span>
                @Html.TextBoxFor(m => m.Email, new { @class = "form-controll", type = "email", required = "required",autocomplete="off" })
                <label>Email</label>
            </div>
            <div class="input-box">
                <span class="icon"><ion-icon name="lock-closed-outline"></ion-icon></span>
                @Html.PasswordFor(m => m.Password, new { @class = "form-controll", type = "password", required = "required" })
                <label>Password</label>
            </div>
            <div class="remember-forgot">
                <label for=""><input type="checkbox" required="required">Agree to the terms & conditions</label>
            </div>
            <button type="submit" class="btn">Register</button>
            <div class="login-register">
                <p>Already have an account?<a href="#" class="login-link">Login</a></p>
            </div>
            @if (ViewBag.SuccessMessage != null)
            {
                <div class="alert alert-success" role="alert">
                    @ViewBag.SuccessMessage
                </div>
            }

            @if (ViewBag.ErrorMessage != null)
            {
                <div class="alert alert-danger" role="alert">
                    @ViewBag.ErrorMessage
                </div>
            }

        }
    </div>

</body>
<script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
<script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
<script src="/js/Login.js"></script>
</html>


